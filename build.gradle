plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'moe.keshane'
archivesBaseName = "webp-server-java"
version = '0.3'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation fileTree(dir:'src/main/resources/libs',include:['*.jar'])
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'webp-server-java'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'webp-server-java'
                description = 'A server is used to output webp images on supported browsers, and can be easily integrated into existing projects.'
                url = 'https://github.com/webp-sh/webp_server_java'
//                properties = [
//                        myProp: "value",
//                        "prop.with.dots": "anotherValue"
//                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'knifec'
                        name = 'Keshane Chen'
                        email = 'keshanechen@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:webp-sh/webp_server_java.git'
                    developerConnection = 'scm:git:git@github.com:webp-sh/webp_server_java.git'
                    url = 'https://github.com/webp-sh/webp_server_java'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}
signing {
    sign publishing.publications.mavenJava
}